swagger: '2.0'
info:
  description: Ethereum Enterprise API
  version: 1.0.0
  title: Ethereum Enterprise
  contact: {}
host: localhost:8080
schemes:
  - http
basePath: /cakeshop/api
tags:
  - name: node
  - name: block
  - name: transaction
  - name: contract
paths:
  /block/get:
    post:
      tags:
        - block
      description: 'Retrieve a block by id, number or tag'
      operationId: postBlock
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          description: Block ID (hash) to retrieve
          type: string
          required: false
          in: body
        - name: number
          description: Block number to retrieve
          type: integer
          required: false
          in: body
        - name: tag
          description: 'One of "earliest", "latest" or "pending"'
          type: string
          required: false
          in: body
      examples:
        - name: Get block by number
          parameters:
            body: |
              {
                "number": 0
              }
        - name: Get block by ID
          parameters:
            body: >
              {
                "id "0x8564f939768d96f6fc0ba1334ed083ab6538da76f17b6d264082cb69aadc7b4c"
              }
        - name: Get latest block
          parameters:
            body: |
              {
                "tag": "latest"
              }
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  id:
                    type: string
                    description: Block hash identifier
                  type:
                    type: string
                    description: "resource type identifier, 'block'"
                  attributes:
                    $ref: '#/definitions/Block'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /contract/compile:
    post:
      tags:
        - contract
      description: Compile the given source code into EVM binary
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          type: string
          description: Contract source code
          required: true
          in: body
        - name: code_type
          type: string
          in: body
          description: Type of code being submitted
          required: false
          default: solidity
          enum:
            - solidity
        - name: optimize
          type: boolean
          required: false
          in: body
          description: Generate optimized code
          default: false
      examples:
        - name: Compile SimpleStorage contract
          parameters:
            body: >
              {

                "code": "contract SimpleStorage { uint storedData; function
              set(uint x) { storedData = x; } function get() constant returns
              (uint retVal) { return storedData; } }",

                "code_type": "solidity"

              }
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  id:
                    type: string
                    description: n/a for compile
                  type:
                    type: string
                    description: "resource type identifier, 'contract'"
                  attributes:
                    $ref: '#/definitions/Contract'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /contract/create:
    post:
      tags:
        - contract
      description: Deploy the given contract onto the chain and add it to the Contract Registry
      operationId: postContractCreate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          type: string
          description: Contract source code
          in: body
        - name: code_type
          type: string
          description: Type of code being submitted
          required: false
          default: solidity
          in: body
          enum:
            - solidity
        - name: args
          type: array
          required: false
          in: body
          description: Constructor arguments (if needed)
          items:
            type: object
        - name: binary
          type: string
          required: false
          in: body
          description: If multiple contracts are specified in the source code, a specific binary to deploy can be passed here
        - name: optimize
          type: boolean
          required: false
          default: false
          in: body
          description: Generate optimized code
      examples:
        - name: Create SimpleStorage contract
          parameters:
            body: >
              {

                "code": "contract SimpleStorage { uint storedData; function
              set(uint x) { storedData = x; } function get() constant returns
              (uint retVal) { return storedData; } }",

                "code_type": "solidity"

              }
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  id:
                    type: string
                    description: Transaction ID. Use /transaction/get to get the resulting Contract ID
                  type:
                    type: string
                    description: "resource type identifier, 'transaction_result'"
                  attributes:
                    $ref: '#/definitions/TransactionResult'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /contract/get:
    post:
      tags:
        - contract
      operationId: postContractGet
      description: Get information about the contract at the given address
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          type: string
          description: ID (address) of Contract to retrieve
          example: '0x01f999deef030a0f3c55cec46e6693c06c6b01f8'
          in: body
      examples:
        - name: Get info about SimpleStorage contract
          parameters:
            body: |
              {
                "address": "<ENTER ADDRESS HERE>"
              }
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  id:
                    type: string
                    description: Contract ID
                  type:
                    type: string
                    description: "resource type identifier, 'contract'"
                  attributes:
                    $ref: '#/definitions/Contract'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /contract/list:
    post:
      tags:
        - contract
      description: List all deployed contracts on the chain
      operationId: postContractList
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: array
                description: response data
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Contract ID
                    type:
                      type: string
                      description: "resource type identifier, 'contract'"
                    attributes:
                      $ref: '#/definitions/Contract'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /contract/read:
    post:
      tags:
        - contract
      description: 'Read contract data using the given method and arguments (does not create a transaction). Optionally read historical state data by passing a block number in the past.'
      operationId: postContractRead
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          type: string
          required: true
          description: Contract ID (address hash) to read from
          example: ''
          in: body
        - name: method
          type: string
          required: true
          description: Method name to call
          in: body
        - name: args
          type: array
          required: false
          description: Method arguments (if needed)
          in: body
          items:
            type: object
        - name: blockNumber
          type: integer
          required: false
          description: Block from which to read the state from
          in: body
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  attributes:
                    properties:
                      result:
                        type: object
                        description: return data from the read call
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /contract/transact:
    post:
      tags:
        - contract
      description: Call a transactional method on the given contract. No state will change until the transaction is committed into a Block.
      operationId: postContractTransact
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          type: string
          required: true
          description: Contract ID (address hash) to transact with
          example: ''
          in: body
        - name: method
          type: string
          required: true
          in: body
          description: Method name to call
        - name: args
          type: array
          required: false
          description: Method arguments (if needed)
          in: body
          items:
            type: object
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  id:
                    type: string
                    description: Transaction ID for the operation
                  type:
                    type: string
                    description: "resource type identifier, 'transaction_result'"
                  attributes:
                    $ref: '#/definitions/TransactionResult'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /transaction/get:
    post:
      tags:
        - transaction
      description: Get transaction information for the given ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          type: string
          required: true
          description: Transaction ID (hash) to retrieve
          example: ''
          in: body
      examples:
        - name: Retrieve Transaction information
          parameters:
            body: |
              {
                "id": "<ENTER HASH HERE>"
              }
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  id:
                    type: string
                    description: Transaction ID
                  type:
                    type: string
                    description: "resource type identifier, 'transaction'"
                  attributes:
                    $ref: '#/definitions/Transaction'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /node/get:
    post:
      tags:
        - node
      description: Get node information
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  id:
                    type: string
                    description: Node ID
                  type:
                    type: string
                    description: "resource type identifier, 'node'"
                  attributes:
                    $ref: '#/definitions/Node'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /node/peers:
    post:
      tags:
        - node
      description: Retrieve information on the peers connected to the node.
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  type:
                    type: string
                    description: "resource type identifier, 'peer'"
                  attributes:
                    $ref: '#/definitions/Peer'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /node/start:
    post:
      tags:
        - node
      description: Start node
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: boolean
                description: Whether or not the node was started
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /node/stop:
    post:
      tags:
        - node
      description: Stop node
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: boolean
                description: Whether or not the node was stopped
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /node/reset:
    post:
      tags:
        - node
      description: Reset the chain to block zero
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: boolean
                description: Whether or not the chain was reset successfully
              errors:
                description: Only present if errors were found
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /node/update:
    post:
      tags:
        - node
      description: Update node configuration. May cause node to restart or even reset.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: logLevel
          type: integer
          required: false
          description: 'Set log level (0-6, 6 is most verbose)'
          in: body
        - name: networkId
          type: integer
          required: false
          description: Network ID (any integer value; node will restart)
          in: body
        - name: identity
          type: string
          required: false
          description: Change node identity (node will restart)
          in: body
        - name: committingTransactions
          type: boolean
          required: false
          description: Whether or not the node should commit incoming transactions (i.e., toggle mining)
          in: body
        - name: extraParams
          type: string
          required: false
          description: Extra parameters to pass to the node (startup flags; node will restart)
          in: body
        - name: genesisBlock
          type: string
          required: false
          description: Genesis block to use for the chain (modifying this will reset the chain)
          in: body
        - name: consensusMode
          type: string
          required: false
          description: 'Consensus mode: Raft or IBFT'
          in: body
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  attributes:
                    $ref: '#/definitions/NodeInfo'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /wallet/list:
    post:
      tags:
        - wallet
      description: List all accounts on the node
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: array
                description: response data
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: "resource type identifier, 'wallet'"
                    attributes:
                      $ref: '#/definitions/Account'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
definitions:
  Account:
      properties:
          address:
            type: string
            description: 160-bit identifier
          balance:
            type: string
            description: A scalar value equal to the number of Wei owned by this address.
  APIError:
    properties:
      id:
        type: string
        description: 'Error ID, if available'
      status:
        type: string
        description: HTTP status code
      code:
        type: string
        description: 'API-specific error code, if available'
      title:
        type: string
        description: Short error description
      detail:
        type: string
        description: Detailed error information
  Contract:
    properties:
      id:
        type: string
        description: Contract unique identifier. In Ethereum this is the contract address.
      author:
        type: string
        description: Pubkey of sender on original create.
      keys:
        type: array
        description: Pubkeys that can access contract.
        items:
          type: string
      abi:
        type: string
        description: Contract ABI
      code:
        type: string
        description: Contract source code
      code_type:
        type: string
        description: Type of code being submitted
        default: solidity
        enum:
          - solidity
  TransactionResult:
    required:
      - id
    properties:
      id:
        type: string
        description: ID of the newly created transaction
  Transaction:
    properties:
      id:
        type: string
      blockHash:
        type: string
      blockNumber:
        type: integer
      transactionIndex:
        type: integer
        description: "integer of the transaction's index position in the block"
      from:
        type: string
        description: address of the sender
      to:
        type: string
        description: address of the receiver. null when it is a contract creation transaction.
      cumulativeGasUsed:
        type: integer
        description: the total amount of gas used when this transaction was executed in the block.
      gasUsed:
        type: integer
        description: the amount of gas used by this specific transaction alone.
      contractAddress:
        type: string
        description: 'the contract address created, if this transaction was a contract creation, otherwise null.'
      logs:
        type: array
        description: TODO add Log type
        items:
          type: object
  Block:
    properties:
      number:
        type: integer
        format: int32
        description: Block number
      hash:
        type: string
        description: hash of the block
      parentHash:
        type: string
        description: hash of the parent block
      nonce:
        type: string
        description: hash of the generated proof-of-work (if avail)
      sha3Uncles:
        type: string
        description: SHA3 of the uncles data in the block (32 bytes)
      logsBloom:
        type: string
        description: the bloom filter for the logs of the block (256 bytes)
      transactionsRoot:
        type: string
        description: the root of the transaction trie of the block (32 bytes)
      stateRoot:
        type: string
        description: the root of the final state trie of the block (32 bytes)
      miner:
        type: string
        description: the address of the beneficiary to whom the mining rewards were given (20 bytes)
      difficulty:
        type: integer
        format: int64
        description: integer of the difficulty of this block
      totalDifficulty:
        type: integer
        format: int64
        description: integer of the total difficulty of the chain until this block
      extraData:
        type: string
        description: 'the "extra data" field for this block'
      gasLimit:
        type: integer
        format: int32
        description: the maximum gas allowed in this block
      gasUsed:
        type: integer
        format: int32
        description: the total gas used by all transactions in this block
      timestamp:
        type: integer
        format: int32
        description: the unix timestamp for when the block was collated
      transactions:
        type: array
        description: Array of transaction hashes
        items:
          type: string
      uncles:
        type: array
        description: Array of uncle hashes
        items:
          type: string
  Node:
    properties:
      status:
        type: string
        description: 'Status of the node, it has two values "running" or "stopped"'
      id:
        type: string
        description: Unique Node ID
      nodeName:
        type: string
        description: Friendly node name (includes client and version info)
      nodeUrl:
        type: string
        description: enode URI (Includes host IP and port number)
      nodeIP:
        type: string
        description: IP address of the node
      peerCount:
        type: integer
        description: Number of peers connected to the node
      pendingTxn:
        type: integer
        description: "Number of transaction in the queue and haven't been mined"
      mining:
        type: boolean
        description: Indicates weather the miner is running or not. It has a true or false values.
      latestBlock:
        type: integer
        description: A number indicating the most recent block that has been mined.
  Peer:
      properties:
        status:
          type: string
          description: 'Status of the node, it has two values "running" or "stopped"'
        id:
          type: string
          description: Unique Node ID
        nodeName:
          type: string
          description: Friendly node name (includes client and version info)
        nodeUrl:
          type: string
          description: enode URI (Includes host IP and port number)
        nodeIP:
          type: string
          description: IP address of the node
  NodeInfo:
      properties:
          identity:
            type: string
            description: Friendly node name which gets included in the full node Name
          committingTransactions:
            type: boolean
            description: Indicates whether the node is commiting transactions or not
          networkId:
            type: integer
            description: Network identifier
          logLevel:
            type: integer
            description: 'Logging verbosity: 0-6 (0=silent, 1=error, 2=warn, 3=info, 4=core, 5=debug, 6=debug detail)'
